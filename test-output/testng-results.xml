<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="1" failed="1" total="2" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="Sample Test Suite" duration-ms="56578" started-at="2021-10-05T02:59:28Z" finished-at="2021-10-05T03:00:25Z">
    <groups>
    </groups>
    <test name="Test Automation" duration-ms="56578" started-at="2021-10-05T02:59:28Z" finished-at="2021-10-05T03:00:25Z">
      <class name="test.java.SampleTest">
        <test-method status="PASS" signature="beforeTestMethod()[pri:0, instance:test.java.SampleTest@271053e1]" name="beforeTestMethod" is-config="true" duration-ms="172" started-at="2021-10-04T21:59:28Z" finished-at="2021-10-04T21:59:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTestMethod -->
        <test-method status="PASS" signature="beforeMethodMethod(java.lang.String, java.lang.reflect.Method)[pri:0, instance:test.java.SampleTest@271053e1]" name="beforeMethodMethod" is-config="true" duration-ms="4001" started-at="2021-10-04T21:59:28Z" finished-at="2021-10-04T21:59:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void test.java.SampleTest.fullTestMethod()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethodMethod -->
        <test-method status="SKIP" signature="fullTestMethod()[pri:0, instance:test.java.SampleTest@271053e1]" name="fullTestMethod" duration-ms="10420" started-at="2021-10-04T21:59:32Z" finished-at="2021-10-04T21:59:43Z">
          <exception class="java.lang.NoSuchFieldError">
            <message>
              <![CDATA[excelPropertyLoader]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NoSuchFieldError: excelPropertyLoader
	at main.java.pageEvents.CheckoutPageEvents.loginMethod(CheckoutPageEvents.java:28)
	at test.java.SampleTest.fullTestMethod(SampleTest.java:27)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NoSuchFieldError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fullTestMethod -->
        <test-method status="PASS" signature="afterMethodMethod(org.testng.ITestResult)[pri:0, instance:test.java.SampleTest@271053e1]" name="afterMethodMethod" is-config="true" duration-ms="676" started-at="2021-10-04T21:59:43Z" finished-at="2021-10-04T21:59:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=fullTestMethod status=SKIP method=SampleTest.fullTestMethod()[pri:0, instance:test.java.SampleTest@271053e1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethodMethod -->
        <test-method status="PASS" signature="beforeMethodMethod(java.lang.String, java.lang.reflect.Method)[pri:0, instance:test.java.SampleTest@271053e1]" name="beforeMethodMethod" is-config="true" duration-ms="16910" started-at="2021-10-04T21:59:43Z" finished-at="2021-10-04T22:00:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void test.java.SampleTest.fullTestMethod()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethodMethod -->
        <test-method status="FAIL" signature="fullTestMethod()[pri:0, instance:test.java.SampleTest@271053e1]" name="fullTestMethod" duration-ms="23213" started-at="2021-10-04T22:00:00Z" finished-at="2021-10-04T22:00:24Z">
          <exception class="java.lang.NoSuchFieldError">
            <message>
              <![CDATA[excelPropertyLoader]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NoSuchFieldError: excelPropertyLoader
	at main.java.pageEvents.CheckoutPageEvents.loginMethod(CheckoutPageEvents.java:28)
	at test.java.SampleTest.fullTestMethod(SampleTest.java:27)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.retryFailed(Invoker.java:967)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1146)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NoSuchFieldError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fullTestMethod -->
        <test-method status="PASS" signature="afterMethodMethod(org.testng.ITestResult)[pri:0, instance:test.java.SampleTest@271053e1]" name="afterMethodMethod" is-config="true" duration-ms="652" started-at="2021-10-04T22:00:24Z" finished-at="2021-10-04T22:00:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=fullTestMethod status=FAILURE method=SampleTest.fullTestMethod()[pri:0, instance:test.java.SampleTest@271053e1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethodMethod -->
        <test-method status="PASS" signature="afterTestMethod()[pri:0, instance:test.java.SampleTest@271053e1]" name="afterTestMethod" is-config="true" duration-ms="305" started-at="2021-10-04T22:00:24Z" finished-at="2021-10-04T22:00:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTestMethod -->
      </class> <!-- test.java.SampleTest -->
    </test> <!-- Test Automation -->
  </suite> <!-- Sample Test Suite -->
</testng-results>
